; (list-ref (list 1 2 3) 1)

(define split-line
  (lambda (line)
    (string->list line)
    ))

(define (load-puzzle filename callback)
  (call-with-input-file filename
    (lambda (p)
      (let loop ((line (read-line p))
                 (result '()))
        (if (eof-object? line)
          (reverse result)
          (loop (read-line p) (cons (callback line) result))
          )
        )))
  )

(define lines
  (load-puzzle "./puzzle_input.test" split-line)
  )

(define (value-at data x y)
  (list-ref (list-ref data y) x)
  )

(define (find-digits data)
  (value-at data 1 0)
  )

(define parts (find-digits lines))

;(print parts)
